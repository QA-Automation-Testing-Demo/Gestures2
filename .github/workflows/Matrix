name: Appium CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  appium-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - chromedriverVersion: "113.0.5672.63"
          apiLevel: 32
          emuTag: google_apis
          arch: x86_64
        - chromedriverVersion: "83.0.4103.39"
          apiLevel: 30
          emuTag: google_apis
          arch: x86
        - chromedriverVersion: "2.44"
          apiLevel: 28
          emuTag: default
          arch: x86
        - chromedriverVersion: "2.20"
          apiLevel: 23
          emuTag: default
          arch: x86

    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      _FORCE_LOGS: 1
      TEST_PASS_THRESHOLD: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dev dependencies
        run: |
          npm install mocha-multi-reporters --save-dev
          npm install -g appium
          npm install --no-save mjpeg-consumer

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.apiLevel }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: false
          api-level: ${{ matrix.apiLevel }}
          disable-spellchecker: true
          target: ${{ matrix.emuTag }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: ${{ matrix.arch }}
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Start Appium server
        run: |
          cwd=$(pwd)
          pushd "$cwd"
          cd ~
          CHROMEDRIVER_VERSION="${{ matrix.chromedriverVersion }}" appium driver install --source=local "$cwd"
          appium driver doctor uiautomator2
          nohup appium server \
            --port=$APPIUM_TEST_SERVER_PORT \
            --address=$APPIUM_TEST_SERVER_HOST \
            --relaxed-security \
            --log-no-colors \
            --log-timestamp \
            2>&1 > "$cwd/appium.log" &
          popd

      - name: Capture logcat
        run: nohup adb logcat > logcat.log &

      - name: Run tests
        run: dotnet test src/Gestures/Gestures.sln --logger:"trx;LogFileName=test_results.trx"
        env:
          APPIUM_HOST: ${{ env.APPIUM_TEST_SERVER_HOST }}
          APPIUM_PORT: ${{ env.APPIUM_TEST_SERVER_PORT }}

      - name: Save logcat output
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: logcat-api${{ matrix.apiLevel }}
          path: logcat.log

      - name: Save server output
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: appium-api${{ matrix.apiLevel }}
          path: appium.log
