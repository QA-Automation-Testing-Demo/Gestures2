name: Appium CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  appium-test:
    runs-on: macos-12
    name: Appium Test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Run Appium Server
        run: |
          npm install -g appium@2.0.0-beta.63
          appium driver install uiautomator2
          # Save the Appium config to a file
          echo "server:
            address: 127.0.0.1
            allow-cors: true
            allow-insecure:
              - foo
              - bar
            base-path: /
            callback-address: 127.0.0.1
            callback-port: 4723
            debug-log-spacing: true
            default-capabilities:
              key: value
            deny-insecure:
              - baz
              - quux
            driver:
              uiautomator2:
                key: value
            keep-alive-timeout: 600
            local-timezone: true
            log: /tmp/appium.log
            log-level: info
            log-no-colors: false
            log-timestamp: true
            long-stacktrace: false
            no-perms-check: false
            nodeconfig:
              key: value
            plugin:
              images:
                key: value
            port: 4723
            relaxed-security: false
            session-override: false
            strict-caps: true
            tmp: /tmp
            trace-dir: /tmp/appium-instruments
            use-drivers:
              - uiautomator2
            use-plugins:
              - baz
              - quux
            webhook: https://some-url.com" > appium-config.yaml
          nohup appium --config appium-config.yaml &
      - name: Install dependencies
        run: dotnet restore src/Gestures/Gestures.sln

      - name: Build the project
        run: dotnet build src/Gestures/Gestures.sln --configuration Release

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-levels: 33
          build-tools: 33.0.0

      - name: Download system image and tools
        run: |
          sdkmanager --install "system-images;android-33;google_apis;x86" "build-tools;33.0.0" || \
          sdkmanager --install "system-images;android-32;google_apis;x86"

      - name: Create AVD
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86" --device "pixel"

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect -no-snapshot -no-snapshot-save &
          EMULATOR_PID=$!
          for i in {1..30}; do
            if adb wait-for-device; then
              echo "Emulator started successfully"
              break
            else
              echo "Waiting for emulator to start... ($i/30)"
              sleep 10
            fi
          done
          adb shell getprop init.svc.bootanim
      - name: Wait for emulator to fully boot
        run: |
          bootanim=""
          failcounter=0
          timeout_in_sec=600  # Increased timeout
          until [[ "$bootanim" =~ "stopped" ]]; do
            bootanim=`adb shell getprop init.svc.bootanim 2>&1`
            if [[ "$bootanim" =~ "stopped" ]]; then
              echo "Emulator boot animation stopped."
              break
            fi
            ((failcounter += 5))
            if [[ $failcounter -gt $timeout_in_sec ]]; then
              echo "Emulator boot process timed out."
              exit 1
            fi
            echo "Waiting for emulator to boot... ($failcounter seconds)"
            sleep 5
          done
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          adb shell input keyevent 82  # Unlock screen
      - name: Verify Appium Server is running
        run: |
          curl --silent --fail http://127.0.0.1:4723/status || exit 1

      - name: Run tests
        run: dotnet test src/Gestures/Gestures.sln --logger:"trx;LogFileName=test_results.trx"
        env:
          APPIUM_HOST: 127.0.0.1
          APPIUM_PORT: 4723

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: '**/*.trx'
Explanation:
Appium Configuration File: The appium-config.yaml file includes all necessary server configurations, specifying the UiAutomator2 driver.
Installing UiAutomator2 Driver: The workflow includes a step to install the UiAutomator2 driver using appium driver install uiautomator2.
Starting the Appium Server with Configuration: The Appium server is started with the appium-config.yaml configuration file.
By following this setup, the Appium server will be correctly configured to use the UiAutomator2 driver, and the workflow will run on GitHub Actions with the necessary tools and dependencies.


2/2





no plugins
ChatGPT
To remove the plugins from the appium-config.yaml and ensure that the Appium server is configured correctly without them, you can adjust the configuration and workflow as follows:

Updated GitHub Actions Workflow
yaml
Copy code
name: Appium CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  appium-test:
    runs-on: macos-12
    name: Appium Test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Run Appium Server
        run: |
          npm install -g appium@2.0.0-beta.63
          appium driver install uiautomator2
          # Save the Appium config to a file
          echo "server:
            address: 127.0.0.1
            allow-cors: true
            base-path: /
            callback-address: 127.0.0.1
            callback-port: 4723
            debug-log-spacing: true
            default-capabilities:
              key: value
            driver:
              uiautomator2:
                key: value
            keep-alive-timeout: 600
            local-timezone: true
            log: /tmp/appium.log
            log-level: info
            log-no-colors: false
            log-timestamp: true
            long-stacktrace: false
            no-perms-check: false
            nodeconfig:
              key: value
            port: 4723
            relaxed-security: false
            session-override: false
            strict-caps: true
            tmp: /tmp
            trace-dir: /tmp/appium-instruments
            use-drivers:
              - uiautomator2
            webhook: https://some-url.com" > appium-config.yaml
          nohup appium --config appium-config.yaml &
      - name: Install dependencies
        run: dotnet restore src/Gestures/Gestures.sln

      - name: Build the project
        run: dotnet build src/Gestures/Gestures.sln --configuration Release

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-levels: 33
          build-tools: 33.0.0

      - name: Download system image and tools
        run: |
          sdkmanager --install "system-images;android-33;google_apis;x86" "build-tools;33.0.0" || \
          sdkmanager --install "system-images;android-32;google_apis;x86"

      - name: Create AVD
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86" --device "pixel"

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect -no-snapshot -no-snapshot-save &
          EMULATOR_PID=$!
          for i in {1..30}; do
            if adb wait-for-device; then
              echo "Emulator started successfully"
              break
            else
              echo "Waiting for emulator to start... ($i/30)"
              sleep 10
            fi
          done
          adb shell getprop init.svc.bootanim
      - name: Wait for emulator to fully boot
        run: |
          bootanim=""
          failcounter=0
          timeout_in_sec=600  # Increased timeout
          until [[ "$bootanim" =~ "stopped" ]]; do
            bootanim=`adb shell getprop init.svc.bootanim 2>&1`
            if [[ "$bootanim" =~ "stopped" ]]; then
              echo "Emulator boot animation stopped."
              break
            fi
            ((failcounter += 5))
            if [[ $failcounter -gt $timeout_in_sec ]]; then
              echo "Emulator boot process timed out."
              exit 1
            fi
            echo "Waiting for emulator to boot... ($failcounter seconds)"
            sleep 5
          done
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          adb shell input keyevent 82  # Unlock screen
      - name: Verify Appium Server is running
        run: |
          curl --silent --fail http://127.0.0.1:4723/status || exit 1

      - name: Run tests
        run: dotnet test src/Gestures/Gestures.sln --logger:"trx;LogFileName=test_results.trx"
        env:
          APPIUM_HOST: 127.0.0.1
          APPIUM_PORT: 4723

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: '**/*.trx'
