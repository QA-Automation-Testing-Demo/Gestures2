name: Appium CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  appium-test:
    runs-on: macos-12
    name: Appium Test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and Run Appium Server
        run: |
          npm install -g appium@2.0.0-beta.63
          appium driver install uiautomator2
          nohup appium &

      - name: Install dependencies
        run: dotnet restore src/Gestures/Gestures.sln

      - name: Build the project
        run: dotnet build src/Gestures/Gestures.sln --configuration Release

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30  # Use 'api-level' instead of 'api-levels'
          build-tools: 30.0.3

      - name: Download x86 system image
        run: |
          yes | sdkmanager --install "system-images;android-30;google_apis;x86"

      - name: Create AVD
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --device "pixel"

      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect -no-snapshot -no-snapshot-save &
          EMULATOR_PID=$!
          for i in {1..30}; do
            if adb wait-for-device; then
              echo "Emulator started successfully"
              break
            else
              echo "Waiting for emulator to start... ($i/30)"
              sleep 10
            fi
          done
          adb shell getprop init.svc.bootanim

      - name: Wait for emulator to fully boot
        run: |
          bootanim=""
          failcounter=0
          timeout_in_sec=600  # Increased timeout
          until [[ "$bootanim" =~ "stopped" ]]; do
            bootanim=`adb shell getprop init.svc.bootanim 2>&1`
            if [[ "$bootanim" =~ "stopped" ]]; then
              echo "Emulator boot animation stopped."
              break
            fi
            ((failcounter += 5))
            if [[ $failcounter -gt $timeout_in_sec ]]; then
              echo "Emulator boot process timed out."
              exit 1
            fi
            echo "Waiting for emulator to boot... ($failcounter seconds)"
            sleep 5
          done
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0
          adb shell input keyevent 82  # Unlock screen

      - name: Verify Appium Server is running
        run: |
          curl --silent --fail http://127.0.0.1:4723/status || exit 1

      - name: Copy APK to working directory
        run: cp ./apk/ApiDemos-debug.apk .

      - name: Run tests
        run: dotnet test src/Gestures/Gestures.sln --logger:"trx;LogFileName=test_results.trx"
        env:
          APPIUM_HOST: 127.0.0.1
          APPIUM_PORT: 4723

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: '**/*.trx'
